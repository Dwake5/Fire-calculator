{"version":3,"sources":["components/FormMain.js","components/TwoTables.js","components/OneTable.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["FormMain","props","Form","Row","className","Col","md","lg","Group","controlId","Label","Control","value","curInvestments","onChange","e","setCurInvestments","target","type","step","min","investmentsPerYear","setInvestmentsPerYear","retirementSpending","setRetirementSpending","SWR","setSWR","Number","moneyNeeded","toLocaleString","TwoTables","interestArray","mapInterestCalculations","lengths","length","Table","size","hover","striped","slice","map","i","OneTable","Results","zeroMoney","useState","minInterest","setMinInterest","maxInterest","setMaxInterest","interestStep","setInterestStep","updateInterestArray","interest","fixedInterest","toFixed","push","Set","sort","a","b","localMonths","curr","perYear","amountNeeded","total","monthlyIncrease","months","calculate","localYearsAndMonths","years","Math","floor","monthsRes","result","monthsToMonthsAndYears","window","innerWidth","width","setWidth","updateWidth","useEffect","onresize","Container","as","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b16f06e.chunk.js","sourcesContent":["import { Form, Col, Row } from \"react-bootstrap\";\n\nconst FormMain = (props) => {\n  return (\n    <div>\n      <Form>\n        <Row className=\"d-flex justify-content-between\">\n\n          <Col md={6} lg={4}>\n\n            <Form.Group controlId=\"InvestmentsTotal\">\n              <Form.Label className=\"pt-md-4\">\n                Current investments:\n              </Form.Label>\n              <Form.Control\n                value={props.curInvestments}\n                onChange={(e) => props.setCurInvestments(+e.target.value)}\n                type=\"number\"\n                step=\"1000\"\n                min=\"0\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"InvestmentsPerYear\">\n              <Form.Label>Investments per year:</Form.Label>\n              <Form.Control\n                value={props.investmentsPerYear}\n                onChange={(e) => props.setInvestmentsPerYear(+e.target.value)}\n                type=\"number\"\n                step=\"1000\"\n                min=\"0\"\n              />\n            </Form.Group>\n\n          </Col>\n\n          <Col md={6} lg={4}>\n            \n            <Form.Group controlId=\"RetirementSpending\">\n              <Form.Label>\n                How much do you want to spend a year in retirement:\n              </Form.Label>\n              <Form.Control\n                value={props.retirementSpending}\n                onChange={(e) => props.setRetirementSpending(+e.target.value)}\n                type=\"number\"\n                step=\"1000\"\n                min=\"0\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-0\" controlId=\"Investments\">\n              <Form.Label>Safe withdrawal rate %:</Form.Label>\n              <Form.Control\n                value={props.SWR}\n                onChange={(e) => props.setSWR(e.target.value)}\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n              />\n            </Form.Group>\n\n            <p className=\"moneyNeeded\">Total money needed Â£{Number(props.moneyNeeded()).toLocaleString()}</p>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default FormMain;\n","import { Table } from \"react-bootstrap\";\n\nconst TwoTables = ({interestArray, mapInterestCalculations}) => {\n  const lengths = () => {\n    let length = interestArray.length;\n    if (length % 2 === 1) length++;\n    return length / 2;\n  };\n\n  return (\n    <div className=\"d-flex\">\n      <Table className=\"smallTable\" size=\"sm\" hover=\"true\" striped=\"true\">\n        <thead>\n          <tr>\n            <th>Interest</th>\n            <th>Months</th>\n            <th>Years and Months</th>\n          </tr>\n        </thead>\n        <tbody>\n          {interestArray\n            .slice(0, lengths())\n            .map((i) => mapInterestCalculations(i))}\n        </tbody>\n      </Table>\n\n      <Table className=\"leftBorder smallTable\" size=\"sm\" hover=\"true\" striped=\"true\">\n        <thead>\n          <tr>\n            <th>Interest</th>\n            <th>Months</th>\n            <th>Years and Months</th>\n          </tr>\n        </thead>\n        <tbody>\n          {interestArray\n            .slice(lengths())\n            .map((i) => mapInterestCalculations(i))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TwoTables;","import { Table } from \"react-bootstrap\";\n\nconst OneTable = ({ interestArray, mapInterestCalculations }) => {\n  return (\n    <Table size=\"sm\" hover=\"true\" striped=\"true\">\n      <thead>\n        <tr>\n          <th>Interest</th>\n          <th>Months</th>\n          <th>Years and Months</th>\n        </tr>\n      </thead>\n      <tbody>{interestArray.map((i) => mapInterestCalculations(i))}</tbody>\n    </Table>\n  );\n};\n\nexport default OneTable;\n","import { Col, Container, Form, Row } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport TwoTables from \"./TwoTables\";\nimport OneTable from \"./OneTable\";\n\nconst Results = ({ curInvestments, investmentsPerYear, moneyNeeded }) => {\n  const zeroMoney = moneyNeeded !== 0;\n  let interestArray = [];\n\n  const [minInterest, setMinInterest] = useState(5);\n  const [maxInterest, setMaxInterest] = useState(15);\n  const [interestStep, setInterestStep] = useState(0.5);\n\n  const calculate = (curr, perYear, interest, amountNeeded) => {\n    const monthlyConversion = 1 / 12;\n    if (perYear === 0 && curr === 0) return;\n    let total = curr;\n    const monthlyIncrease = (interest / 100 + 1) ** monthlyConversion;\n\n    let months = 0;\n    while (total <= amountNeeded) {\n      total += perYear / 12;\n      total *= monthlyIncrease;\n      months++;\n    }\n    return months;\n  };\n\n  const updateInterestArray = () => {\n    interestArray = [];\n    if (interestStep < 0.1) return [];\n    for (\n      let interest = minInterest;\n      interest <= maxInterest;\n      interest += interestStep\n    ) {\n      const fixedInterest = interest.toFixed(1);\n      interestArray.push(fixedInterest);\n    }\n    interestArray.push(\"8.2\");\n    interestArray = [...new Set(interestArray.sort((a, b) => a - b))];\n  };\n\n  const monthsToMonthsAndYears = (months) => {\n    const years = Math.floor(months / 12);\n    const monthsRes = Math.floor(months % 12);\n    let result = \"\";\n    if (years > 1) result += years + \" years\";\n    if (years === 1) result += years + \" year\";\n    if (years > 0 && monthsRes > 0) result += \" \";\n    if (monthsRes > 1) result += monthsRes + \" months\";\n    if (monthsRes === 1) result += monthsRes + \" month\";\n    return result;\n  };\n\n  const mapInterestCalculations = (interest) => {\n    const localMonths = calculate(\n      curInvestments,\n      investmentsPerYear,\n      interest,\n      moneyNeeded\n    );\n    const localYearsAndMonths = monthsToMonthsAndYears(localMonths);\n    return (\n      <tr\n        className={interest === \"8.2\" ? \"golden cellWithComment\" : \"\"}\n        key={interest}\n      >\n        <td>\n          {interest}\n          {interest === \"8.2\" && (\n            <span className=\"cellComment\">8.2% is the historic average</span>\n          )}\n        </td>\n        <td>{localMonths}</td>\n        <td>{localYearsAndMonths}</td>\n      </tr>\n    );\n  };\n\n  const doChecks = () => {\n    if (curInvestments >= moneyNeeded) return false;\n    if (interestStep < 0.1) return false;\n    if (!zeroMoney) return false;\n    return true;\n  };\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const updateWidth = () => setWidth(window.innerWidth);\n  useEffect(() => (window.onresize = updateWidth), []);\n\n  // Show 1 or 2 tables?\n  const showTable = () => {\n    if (interestArray.length > 26 && width > 850) {\n      return (\n        <TwoTables\n          interestArray={interestArray}\n          mapInterestCalculations={mapInterestCalculations}\n        />\n      );\n    } else {\n      return (\n        <OneTable\n          interestArray={interestArray}\n          mapInterestCalculations={mapInterestCalculations}\n        />\n      );\n    }\n  };\n\n  useEffect(() => {\n    updateInterestArray();\n  }, [minInterest, maxInterest, interestStep]);\n\n  useEffect(() => {\n    if (interestStep < 0.1) setInterestStep(0.1);\n  }, [interestStep]);\n\n  useEffect(() => {\n    if (maxInterest > 200) setMaxInterest(200);\n  }, [maxInterest]);\n\n  updateInterestArray();\n\n  return (\n    <Container>\n      <Form>\n        <Form.Row className=\"mt-4\">\n          <Col>\n            <Form.Group as={Row} controlId=\"MinInterest\">\n              <Form.Label className=\"ml-3 mt-1\">Min Interest:</Form.Label>\n              <Col md={5}>\n                <Form.Control\n                  value={minInterest}\n                  onChange={(e) => setMinInterest(+e.target.value)}\n                  type=\"number\"\n                  step=\"1\"\n                  min=\"1\"\n                  size=\"sm\"\n                />\n              </Col>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group as={Row} controlId=\"MaxInterest\">\n              <Form.Label className=\"ml-3 mt-1\">Max Interest:</Form.Label>\n              <Col md={5}>\n                <Form.Control\n                  value={maxInterest}\n                  onChange={(e) => setMaxInterest(+e.target.value)}\n                  type=\"number\"\n                  step=\"1\"\n                  min=\"5\"\n                  size=\"sm\"\n                />\n              </Col>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group as={Row} controlId=\"InterestStep\">\n              <Form.Label className=\"ml-3 mt-1\">Interest Step:</Form.Label>\n              <Col md={5}>\n                <Form.Control\n                  value={interestStep}\n                  onChange={(e) => setInterestStep(+e.target.value)}\n                  type=\"number\"\n                  step=\".1\"\n                  min=\".1\"\n                  size=\"sm\"\n                />\n              </Col>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n      </Form>\n      {curInvestments >= moneyNeeded && moneyNeeded > 0 && (\n        <h2 className=\"mt-3 text-center\">You already have enough to retire!</h2>\n      )}\n      {moneyNeeded === 0 && (\n        <h3 className=\"mt-3 text-center\">Please fill in the above.</h3>\n      )}\n\n      {doChecks() && showTable()}\n    </Container>\n  );\n};\n\nexport default Results;\n","import FormMain from \"./components/FormMain\";\nimport { Container } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Results from \"./components/Results\";\n\nfunction App() {\n  const [curInvestments, setCurInvestments] = useState(20000);\n  const [investmentsPerYear, setInvestmentsPerYear] = useState(5000);\n  const [retirementSpending, setRetirementSpending] = useState(20000);\n  const [SWR, setSWR] = useState(3);\n\n  const moneyNeeded = () => {\n    if (SWR < 0.1) return 0\n    return (+retirementSpending * 100/SWR).toFixed(2)\n  }\n\n  return (\n    <Container>\n      <h1 className=\"text-center my-3\">Months to FIRE based on interest rate</h1>\n      <FormMain\n        curInvestments={curInvestments}\n        setCurInvestments={setCurInvestments}\n        investmentsPerYear={investmentsPerYear}\n        setInvestmentsPerYear={setInvestmentsPerYear}\n        retirementSpending={retirementSpending}\n        setRetirementSpending={setRetirementSpending}\n        SWR={SWR}\n        setSWR={setSWR}\n        moneyNeeded={moneyNeeded}\n      />\n      <Results\n        curInvestments={curInvestments}\n        investmentsPerYear={investmentsPerYear}\n        moneyNeeded={moneyNeeded()}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}